[job]
directory = /home/tiansong/HDD/code/PycharmProjects/p3_mxml/jobs
snap_prefix = snapshot

[data]
;data_format in ['normal', 'dicom']
data_format = normal
label_txt = /home/tiansong/HDD/code/PycharmProjects/p3_mxml/mx_rec/chest_labels.txt
;train_path = /home/tiansong/HDD/product/Infervision/infer-digit/jobs/20181226-105108-d788/train.rec
train_path = /home/tiansong/HDD/infer_dataset/classification/chest_xray/train
t_root =
val_path = /home/tiansong/HDD/product/Infervision/infer-digit/jobs/20181226-105108-d788/val.rec
v_root =
model_path = /home/tiansong/HDD/code/PycharmProjects/p3_mxml/models/mxnet/class_in_one.py
param_path =


[transformation]
cast = float32
;0=no_resize 1=resize 2=resize_long 3=resize_short_within 4=resize_contain(padding)
resize_type = 1
width = 800
height = 800
interpolation = 1
;center crop
crop_width =
crop_height =
norm_mean = 0.12,0.23,0.21
norm_std = 0.12,0.23,0.21
window_center = 1000
window_width = 500

[augmentation]
rand_flipping = 0
;RandomResizedCrop
rrc_size = 500,500
rrc_scale = 0.08,1.0
rrc_ratio = 0.5,1.2
rand_brightness = 0.3
rand_contrast = 0.3
rand_saturation = 0.3
rand_hue = 0.3
;Add AlexNet-style PCA-based noise to an image.
rand_lighting = 0.3

[hyper-param]
ml_type = classification
gpus = 0,1
shuffle = True
snap_interval = 1
val_interval = 1
epochs = 15
batch_size = 4
; optimizer in ['sgd', 'adam', 'rmsprop']
optimizer = sgd
wd = 0.0001
; SGD {"momentum": 0.9}
; Adam {"beta1": 0.9, "beta2": 0.99}
; RMSProp {"gamma1": 0.9, "gamma2": 0.9}
opt_param = {"momentum": 0.9}
;learning rate decay type
;lr_mode in ['step', 'poly', 'cosine']
lr_mode = poly
base_lr = 0.001
;lr_steps = 5,15,25
lr_steps =
step_factor = 0.1
;power = 0.9
power = 0.9
target_lr = 0.00001
warmup_lr = 0.01
warmup_epochs = 5
;warmup_mode in ['linear', 'constant']
warmup_mode = linear
